{
 "cells": [
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": [
    "# Итоговое задание\n",
    "\n",
    "Есть мнение: раньше снимали настоящее кино, не то что сейчас. Ваша задача — проверить это утверждение, используя файлы с рейтингами фильмов movies_stats.csv. То есть проверить, верно ли, что с ростом года выпуска фильма средний рейтинг становится ниже.\n",
    "\n",
    "При этом мы не будем затрагивать субъективные факторы этих рейтингов, а пройдёмся по следующему алгоритму:\n",
    "\n",
    "1. В переменную years запишите список из всех годов с 1950-го по 2010-й.\n",
    "    \n",
    "2. Напишите функцию production_year, которая каждой строке из названия фильма выставляет год выпуска (год выпуска берём из столбца title). Не все названия фильмов содержат год выпуска в одинаковом формате, поэтому используйте следующий алгоритм:  \n",
    "- для каждой строки пройдите по всем годам списка years;\n",
    "- если номер года присутствует в названии фильма, то функция возвращает этот год как год выпуска;\n",
    "- если ни один из номеров года списка years не встретился в названии фильма, то возвращается 1900 год.\n",
    "\n",
    "3. Запишите год выпуска фильма по алгоритму пункта 2 в новый столбец ‘year’.\n",
    "    \n",
    "4. Посчитайте средний рейтинг всех фильмов для каждого значения столбца ‘year’ и отсортируйте результат по убыванию рейтинга.\n",
    "\n"
   ],
   "id": "1c9a645399787181"
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-20T12:12:09.005752Z",
     "start_time": "2024-10-20T12:12:03.980631Z"
    }
   },
   "cell_type": "code",
   "source": [
    "import pandas as pd\n",
    "\n",
    "movies_stats = pd.read_csv('movies_stats.csv', sep=',', encoding='utf-8')\n",
    "years = list(map(str, range(1950, 2011)))\n",
    "def production_year(row):\n",
    "    for year in years:\n",
    "        if year in row['title']:\n",
    "            return year\n",
    "    return 1900\n",
    "\n",
    "movies_stats['year'] = movies_stats.apply(production_year, axis=1)\n",
    "avg_rating_by_year = movies_stats.groupby('year')['rating'].mean().sort_values(ascending=False)\n",
    "print(avg_rating_by_year)\n"
   ],
   "id": "f3b6549b2fd4f597",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "year\n",
      "1957    4.014241\n",
      "1972    4.011136\n",
      "1952    4.000000\n",
      "1954    3.994220\n",
      "1951    3.983539\n",
      "          ...   \n",
      "2005    3.448434\n",
      "2003    3.444777\n",
      "1996    3.426600\n",
      "1997    3.415764\n",
      "2000    3.356104\n",
      "Name: rating, Length: 62, dtype: float64\n"
     ]
    }
   ],
   "execution_count": 3
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
